name: MediaWiki Build and Publish
on:
 push:
   branches: [ main ]

env:
  GKE_PROJECT: academic-matter-176711
  GKE_EMAIL: ${{ secrets.GKE_EMAIL }}
  GITHUB_SHA: ${{ github.sha }}
  GKE_ZONE: ap-south1-a
  GKE_CLUSTER: gke-arjun-cluster
  DEPLOYMENT_NAME: arjun-mediawiki-deployment

jobs:
 build-mariadb-image:
   name: 'Docker: Build and upload artifacts'
   runs-on: ubuntu-latest
   steps:
     -
       name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v2
     -
       name: Login to DockerHub
       uses: docker/login-action@v2
       with:
         username: ${{ secrets.DOCKERHUB_USERNAME }}
         password: ${{ secrets.DOCKERHUB_TOKEN }}
     -
       name: Build and push
       uses: docker/build-push-action@v3
       with:
         file: ./Dockerfile.mariadb
         push: true
         tags: arjunm56i/mariadb-server-arjun:v1
 build-mediawiki-image:
   name: 'Docker: Build and upload artifacts'
   runs-on: ubuntu-latest
   steps:
     -
       name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v2
     -
       name: Login to DockerHub
       uses: docker/login-action@v2
       with:
         username: ${{ secrets.DOCKERHUB_USERNAME }}
         password: ${{ secrets.DOCKERHUB_TOKEN }}
     -
       name: Build and push
       uses: docker/build-push-action@v3
       with:
         file: ./mediawiki/Dockerfile
         push: true
         tags: arjunm56i/mediawiki-arjun:v1

 helm-lint:
   name: Helm lint and release
   runs-on: ubuntu-latest
   needs: build-mediawiki-image
   steps: 
     - name: Checkout
       uses: actions/checkout@v3
     - id: 'auth'
       name: 'Authenticate to Google Cloud'
       uses: 'google-github-actions/auth@v0'
       with:
         credentials_json: '${{ secrets.GKE_KEY }}'   
     # Deploy the Docker image to the GKE cluster
     - name: Deploy
       run: |
        gcloud container clusters get-credentials $GKE_CLUSTER \
          --zone $GKE_ZONE \
          --project $GKE_PROJECT
        helm upgrade $GKE_PROJECT $GKE_PROJECT-cluster/ \
          --set randocats.image.tag=$GITHUB_SHA \
          --wait
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide
